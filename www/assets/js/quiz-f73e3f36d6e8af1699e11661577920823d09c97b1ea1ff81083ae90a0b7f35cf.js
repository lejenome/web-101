"use strict";function loadQuiz(){const e=document.getElementById("quiz-container"),t=document.getElementById("quiz-json");if(t){const n=JSON.parse(t.textContent);new QuizManager(n).insertInto(e)}else{const t=window.location.pathname.split("/"),n=t[t.length-1].split(".")[0]+".json",s=new XMLHttpRequest;s.overrideMimeType("application/json"),s.onload=function(){const t=JSON.parse(s.responseText);new QuizManager(t).insertInto(e)},s.open("GET",n),s.send(null)}}class QuizManager{constructor(e){for(const t of(this.data=e,this.data.quizs))t.type||(t.choices&&"number"==typeof t.answer?t.type="radio":t.choices&&"object"==typeof t.answer?t.type="checkbox":t.choices||(t.type="text")),"radio"===t.type?(t.answerDisplay=t.answer,t.answer-=1):"checkbox"===t.type&&(t.answerDisplay=t.answer.length?t.answer.join(", "):"\xd8",t.answer=t.answer.map(e=>e-1)),t.score||(t.score=this.data.defaultScore||1)}handleClicks(e){}insertInto(e){e.innerHTML=this.toHTML(),this.form=e.getElementsByClassName("quiz-board")[0],this.form.addEventListener("submit",e=>this.handleSubmit(e)),this.form.addEventListener("click",e=>this.handleClicks(e))}toHTML(){return`\n    <form class="quiz-board" class="form">\n    <ol style="padding-left: 0">\n    ${this.data.quizs.map((e,t)=>this.quizToHTML(e,t)).join("")}\n    </ol>\n    <div class="form-footer">\n      <hr/>\n      <div class="row">\n        <div class="col quiz-score font-weight-bold">Score: <span id="score-current">0</span>/<span id="score-sum">${this.maxScore()}</span></div>\n        <div class="col"><input type="submit" value="Verifier" class="btn btn-primary float-right"/></div>\n      </div>\n    </div>\n    </form>\n    `}quizToHTML(e,t){return"checkbox"===e.type||"radio"===e.type?this.checkQuizToHTML(e,t):this.inputToHTML(e,t)}checkQuizToHTML(e,t){return`<li><fieldset class="form-group quiz" id="quiz-${t}">\n    <legend class="quiz-title col-form-legend">${e.title}\n      <span class="quiz-score badge badge-secondary float-right">${e.score}</span>\n    </legend>\n    <div class="quiz-control">\n    ${e.choices.map((n,s)=>`\n      <div class="custom-control custom-${e.type||"checkbox"}">\n        <input type="${e.type||"checkbox"}" class="custom-control-input" value="${s}" name="${t}" id="quiz-${t}-${s}">\n        <label class="custom-control-label ml-2" for="quiz-${t}-${s}">${n}</label>\n      </div>\n    `).join("")}\n    </div>\n    <button type="button" class="btn btn-success show-answer mt-3" data-answer="${t}" data-toggle="collapse" data-target="#answer-${t}" aria-expanded="false">Afficher R\xe9ponse</button>\n    <div class="answer collapse mt-3" data-answer="${t}" id="answer-${t}">\n     <div class="card card-body">\n      R\xe9ponse(s) : ${e.answerDisplay}\n      ${e.help?`\n        <hr />\n          ${e.help}\n      `:""}\n     </div>\n    </div>\n    </fieldset></li>`}inputToHTML(e,t){}handleSubmit(e){e.preventDefault(),document.getElementById("score-current").textContent=this.getScore()}getScore(){let e=0;const t=new FormData(this.form);for(let n=0;n<this.data.quizs.length;n++){const s=this.data.quizs[n];let a,o=!1;"checkbox"===s.type?(a=t.getAll(n)).length===s.answer.length&&a.every(e=>s.answer.indexOf(parseInt(e))>-1)&&(o=!0):"radio"===s.type||"number"===s.type?(a=t.get(n),parseInt(a)===s.answer&&(o=!0)):(a=t.get(n).trim())===s.answer&&(o=!0),o?(e+=s.score,document.getElementById(`quiz-${n}`).classList.add("has-success")):document.getElementById(`quiz-${n}`).classList.remove("has-success")}return e}maxScore(){return this.data.quizs.reduce((e,t)=>e+t.score,0)}}loadQuiz();